{"version":3,"sources":["components/Databoxes/Databoxes.module.css","api/index.js","components/Graphs/Graphs.jsx","components/Dropdown/Dropdown.jsx","components/Databoxes/Databoxes.jsx","App.js","index.js","App.module.css","components/Graphs/Graphs.module.css","components/Dropdown/Dropdown.module.css"],"names":["module","exports","url","getData","countrySelected","a","modifiedUrl","axios","get","response","modifiedData","confirmed","data","recovered","deaths","lastupdated","lastUpdate","getCountries","countries","map","country","name","getDailydata","reportDate","total","date","Graphs","props","infected","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","value","options","legend","display","title","text","className","styles","container","Dropdown","setCountries","fetchCountries","FormControl","NativeSelect","dropdown","onChange","e","onCountrychange","target","i","key","Databoxes","console","log","Grid","spacing","justify","item","xs","md","component","Card","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","App","state","onCountryChange","responseData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.827465ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Databoxes_container__1Yeya\",\"card\":\"Databoxes_card__2SSnQ\",\"infected\":\"Databoxes_infected__2CUnI\",\"recovered\":\"Databoxes_recovered__h2IVr\",\"deaths\":\"Databoxes_deaths__31c11\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const getData = async(countrySelected) => {\r\n  let modifiedUrl = url;\r\n  if(countrySelected) {\r\n    modifiedUrl = `${url}/countries/`+ countrySelected;\r\n  }\r\n    try {\r\n       const response = await axios.get(modifiedUrl);\r\n       const modifiedData = {\r\n           confirmed : response.data.confirmed,\r\n           recovered : response.data.recovered,\r\n           deaths : response.data.deaths,\r\n           lastupdated : response.data.lastUpdate\r\n       }\r\n       return modifiedData;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getCountries = async () => {\r\n    try {\r\n      const { data: { countries } } = await axios.get(`${url}/countries`);\r\n  \r\n      return countries.map((country) => country.name);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\nexport const getDailydata = async () => {\r\n  try {\r\n    const response = await axios.get(`${url}/daily`);\r\n    const modifiedData = response.data.map(({ confirmed, deaths, reportDate }) => ({ confirmed: confirmed.total, deaths: deaths.total, date: reportDate }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { getDailydata } from '../../api';\r\n\r\nimport styles from './Graphs.module.css';\r\n\r\nconst Graphs = (props) => {\r\n\r\n    let infected = props.data.confirmed;\r\n    let recovered = props.data.recovered;\r\n    let deaths = props.data.deaths;\r\n    let countrySelected= props.country\r\n\r\n    const [dailyData, setDailyData] = useState({})\r\n\r\n    useEffect(() => {\r\n    const fetchDailyData = async () => {\r\n    const initialDailyData = await getDailydata();\r\n    setDailyData(initialDailyData);\r\n    };\r\n    fetchDailyData();\r\n  },[]);\r\n\r\nconst lineChart = (\r\n   dailyData.length ? (<Line data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [{\r\n          data: dailyData.map((data) => data.confirmed),\r\n          label: 'Infected',\r\n          borderColor: 'blue',\r\n          fill: true,\r\n        }, {\r\n          data: dailyData.map((data) => data.deaths),\r\n          label: 'Deaths',\r\n          borderColor: 'red',\r\n          backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n          fill: true,\r\n        // }, {\r\n        //     data: dailyData.map((data) => data.recovered),\r\n        //     label: 'Recovered',\r\n        //     borderColor: 'green',\r\n        //     backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n        //     fill: true,\r\n           },\r\n        ],\r\n      }}/>\r\n    ):null\r\n)\r\nconst barChart = (\r\n    infected ? (\r\n        <Bar\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [\r\n              {\r\n                label: 'People',\r\n                backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                data: [infected.value, recovered.value, deaths.value],\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: { display: true, text: `Filtered by ${countrySelected}` },\r\n          }}\r\n        />\r\n      ) : null\r\n)\r\n\r\n    return (\r\n    <div className={styles.container}>\r\n       {countrySelected ? barChart : lineChart }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Graphs;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './Dropdown.module.css';\r\nimport { getCountries } from '../../api';\r\n\r\nconst Dropdown = (props) => {\r\n    const [countries, setCountries] = useState([]);\r\n  \r\n    useEffect(() => {\r\n        const fetchCountries = async () => {\r\n        setCountries(await getCountries());\r\n      };\r\n      fetchCountries();\r\n    }, []);\r\n\r\n    return (\r\n        <FormControl>\r\n            <NativeSelect className={styles.dropdown} onChange={(e)=> props.onCountrychange(e.target.value)}>\r\n                <option value=\"\">All</option>\r\n            {countries.map((country, i) => <option key ={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default Dropdown;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Databoxes.module.css';\r\n\r\nconst Databoxes = (props) => {\r\n        \r\n    // if (!confirmed) {\r\n    //     return 'Loading...';\r\n    //   }\r\n    console.log(props)\r\n    if (!props.data.confirmed) {\r\n        return 'Loading...';\r\n      }\r\n        let confirmed = props.data.confirmed;\r\n        let recovered = props.data.recovered;\r\n        let deaths = props.data.deaths;\r\n        let lastUpdate = props.data.lastupdated;\r\n    return (\r\n        <div className={styles.container}>\r\n             <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          Infected\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n        </Typography>\r\n        <Typography color=\"textSecondary\">\r\n          {new Date(lastUpdate).toDateString()}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Number of active cases of COVID-19.\r\n        </Typography>\r\n      </CardContent>\r\n      </Grid>\r\n      <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          Recovered\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n        </Typography>\r\n        <Typography color=\"textSecondary\">\r\n          {new Date(lastUpdate).toDateString()}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Number of recovered cases of COVID-19.\r\n        </Typography>\r\n      </CardContent>\r\n      </Grid>\r\n      <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          Deaths\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n        </Typography>\r\n        <Typography color=\"textSecondary\">\r\n          {new Date(lastUpdate).toDateString()}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Number of Deaths.\r\n        </Typography>\r\n      </CardContent>\r\n      </Grid>\r\n      </Grid>\r\n      </div>\r\n        // <h1> {props.data.confirmed.value}</h1>\r\n        // <h1> {recovered} </h1>\r\n        // <h1> {deaths} </h1>\r\n        // <h1> {lastUpdate} </h1>\r\n    )\r\n}\r\n\r\nexport default Databoxes;","import React from 'react';\nimport styles from './App.module.css';\nimport { Graphs, Databoxes, Dropdown } from './components';\nimport { getData } from './api/index';\n\nclass App extends React.Component {\n  state = {\n    data : {},\n    country : ''\n  }\n\n  async componentDidMount() {\n    const responseData = await getData();\n    this.setState({data : responseData})\n\n  };\n\n  onCountryChange = async (countrySelected) => {\n    const responseData = await getData(countrySelected);\n    this.setState({data : responseData})\n    this.setState({country : countrySelected})\n  }\n\n  render() {\n    const data = this.state.data;\n    const country = this.state.country;\n\n    return (\n      <div className={styles.container}>\n        {/* <div className = {styles.background}> */}\n        {/* <img src={coronaImage} alt=\"COVID-19\" /> */}\n        <h1>Covid-19</h1>\n        Filter by country<Dropdown onCountrychange={this.onCountryChange}/>\n        <Databoxes data={data}/>\n        <Graphs data={data} country={country}/>\n      {/* </div> */}\n      </div>\n  \n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1rOui\",\"image\":\"App_image__2BcO_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Graphs_container__J5ZGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__AzbEZ\"};"],"sourceRoot":""}